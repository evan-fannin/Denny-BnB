/*! For license information please see main.78db855f5112ba0fce94.hot-update.js.LICENSE.txt */
"use strict";self.webpackHotUpdatefrontend("main",{"./src/axios.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! axios */ \"./node_modules/axios/index.js\");\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(axios__WEBPACK_IMPORTED_MODULE_0__);\n\nconst baseURL = 'http://127.0.0.1:8000/api/';\nconst axiosInstance = axios__WEBPACK_IMPORTED_MODULE_0___default().create({\n  baseURL: baseURL,\n  timeout: 5000,\n  headers: {\n    Authorization: localStorage.getItem('access_token') ? 'Bearer ' + localStorage.getItem('access_token') : null,\n    'Content-Type': 'application/json',\n    Accept: 'application/json'\n  }\n});\naxiosInstance.interceptors.response.use(response => {\n  return response;\n}, async function (error) {\n  const originalRequest = error.config;\n\n  if (typeof error.response === 'undefined') {\n    alert('A server/network error occurred. ' + 'Looks like CORS might be the problem. ' + 'Sorry about this - we will get it fixed shortly.');\n    return Promise.reject(error);\n  }\n\n  if (error.response.status === 401 && originalRequest.url === baseURL + 'token/refresh/') {\n    console.log('error refreshing token');\n    window.location.href = '/signout';\n    return Promise.reject(error);\n  }\n\n  if (error.response.data.code === 'token_not_valid' && error.response.status === 401 && error.response.statusText === 'Unauthorized') {\n    const refreshToken = localStorage.getItem('refresh_token');\n\n    if (refreshToken === 'undefined') {\n      console.log('undefined refresh token');\n      window.location.href = '/signout';\n    }\n\n    if (refreshToken) {\n      const tokenParts = JSON.parse(atob(refreshToken.split('.')[1])); // exp date in token is expressed in seconds, while now() returns milliseconds:\n\n      const now = Math.ceil(Date.now() / 1000);\n      console.log(tokenParts.exp);\n\n      if (tokenParts.exp > now) {\n        return axiosInstance.post('token/refresh/', {\n          refresh: refreshToken\n        }).then(response => {\n          localStorage.setItem('access_token', response.data.access);\n          localStorage.setItem('refresh_token', response.data.refresh);\n          axiosInstance.defaults.headers['Authorization'] = 'Bearer ' + response.data.access;\n          originalRequest.headers['Authorization'] = 'Bearer ' + response.data.access;\n          return axiosInstance(originalRequest);\n        }).catch(err => {\n          console.log(err);\n        });\n      } else {\n        console.log('Refresh token is expired', tokenParts.exp, now);\n        window.location.href = '/signout';\n      }\n    } else {\n      console.log('Refresh token not available.');\n      window.location.href = '/signout';\n    }\n  } // specific error handling done elsewhere\n\n\n  return Promise.reject(error);\n});\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (axiosInstance);\n\n//# sourceURL=webpack://frontend/./src/axios.js?")}},(function(e){e.h=()=>"cfcf12933599cb44a9fa"}));